package model;
// Generated May 4, 2019 8:01:01 PM by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "Product", schema = "dbo", catalog = "Badminton")
public class Product implements java.io.Serializable {

	private Integer id;
	private Category category;
	private Producer producer;
	private String name;
	private int price;
	private String img;
	private int quantity;
	private String description;
	private int topHot;
	private int newProduct;
	private String active;
	private Set<Sale> sales = new HashSet<Sale>(0);
	private Set<BillDetails> billDetailses = new HashSet<BillDetails>(0);

	public Product() {
	}

	public Product(Category category, Producer producer, String name, int price, String img, int quantity,
			String description, int topHot, int newProduct) {
		this.category = category;
		this.producer = producer;
		this.name = name;
		this.price = price;
		this.img = img;
		this.quantity = quantity;
		this.description = description;
		this.topHot = topHot;
		this.newProduct = newProduct;
	}

	public Product(Category category, Producer producer, String name, int price, String img, int quantity,
			String description, int topHot, int newProduct, String active, Set<Sale> sales,
			Set<BillDetails> billDetailses) {
		this.category = category;
		this.producer = producer;
		this.name = name;
		this.price = price;
		this.img = img;
		this.quantity = quantity;
		this.description = description;
		this.topHot = topHot;
		this.newProduct = newProduct;
		this.active = active;
		this.sales = sales;
		this.billDetailses = billDetailses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CategoryID", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ProducerID", nullable = false)
	public Producer getProducer() {
		return this.producer;
	}

	public void setProducer(Producer producer) {
		this.producer = producer;
	}

	@Column(name = "Name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Price", nullable = false)
	public int getPrice() {
		return this.price;
	}

	public void setPrice(int price) {
		this.price = price;
	}

	@Column(name = "IMG", nullable = false)
	public String getImg() {
		return this.img;
	}

	public void setImg(String img) {
		this.img = img;
	}

	@Column(name = "Quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "Description", nullable = false)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "TopHot", nullable = false)
	public int getTopHot() {
		return this.topHot;
	}

	public void setTopHot(int topHot) {
		this.topHot = topHot;
	}

	@Column(name = "NewProduct", nullable = false)
	public int getNewProduct() {
		return this.newProduct;
	}

	public void setNewProduct(int newProduct) {
		this.newProduct = newProduct;
	}

	@Column(name = "Active")
	public String getActive() {
		return this.active;
	}

	public void setActive(String active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Sale> getSales() {
		return this.sales;
	}

	public void setSales(Set<Sale> sales) {
		this.sales = sales;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<BillDetails> getBillDetailses() {
		return this.billDetailses;
	}

	public void setBillDetailses(Set<BillDetails> billDetailses) {
		this.billDetailses = billDetailses;
	}

}
